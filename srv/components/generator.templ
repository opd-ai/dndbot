// srv/components/generator.templ
package components

import "fmt"

templ GeneratorForm() {
    <div class="generator-container">
        <form 
            id="generator-form" 
            hx-post="/generate" 
            hx-target="#generation-status"
            hx-on::after-request="
                const sessionId = event.detail.headers['X-Session-Id'];
                if (sessionId) {
                    sessionManager.setSessionId(sessionId);
                }
            "
        >
            <textarea 
                name="prompt" 
                required 
                placeholder="Enter your prompt..."
                class="w-full p-2 border rounded"
            ></textarea>
            <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded">
                Generate
            </button>
        </form>
        <div id="generation-status" hx-trigger="load" hx-get="/check-session"></div>
    </div>
}

templ GenerationStatus(sessionID string) {
    if sessionID != "" {
        <div
            id="generation-output"
            class="generation-status"
            data-session-id={ sessionID }
            hx-trigger="load"
            hx-get={ fmt.Sprintf("/api/messages/%s", sessionID) }
            hx-target="#message-container"
        >
            @messageContainer(sessionID)
            @messageStyles()
            @messageHandling()
        </div>
    }
}

templ messageContainer(sessionID string) {
    <div 
        id="message-container" 
        class="message-output"
        data-session-id={ sessionID }
        hx-get={ fmt.Sprintf("/api/messages/%s", sessionID) }
        hx-trigger="load delay:500ms, every 2s"
        hx-swap="innerHTML"
    >
        <div class="loading">Loading messages...</div>
    </div>
}

// ... (messageStyles() remains the same)

script messageHandling() {
    // Initialize session check on page load
    document.addEventListener('DOMContentLoaded', function() {
        const sessionId = sessionManager.getSessionId();
        if (sessionId) {
            const messageContainer = document.querySelector('#message-container');
            if (messageContainer) {
                messageContainer.setAttribute('data-session-id', sessionId);
                htmx.trigger(messageContainer, 'load');
            }
        }
    });

    // Handle successful message loads
    htmx.on('#message-container', 'htmx:afterRequest', function(evt) {
        if (evt.detail.successful) {
            const container = document.getElementById('message-container');
            if (container) {
                container.scrollTop = container.scrollHeight;
            }
        }
    });

    // Add session ID to requests
    htmx.on('#message-container', 'htmx:beforeRequest', function(evt) {
        const sessionId = sessionManager.getSessionId();
        if (sessionId) {
            evt.detail.headers['X-Session-Id'] = sessionId;
        }
    });

    // Handle session expiry
    htmx.on('#message-container', 'htmx:afterRequest', function(evt) {
        if (evt.detail.xhr.status === 404) {
            sessionManager.clearSession();
            const statusDiv = document.getElementById('generation-status');
            if (statusDiv) {
                statusDiv.innerHTML = '';
            }
        }
    });

    // Update messages when tab becomes visible
    document.addEventListener('visibilitychange', function() {
        if (!document.hidden) {
            const sessionId = sessionManager.getSessionId();
            if (sessionId) {
                const container = document.getElementById('message-container');
                if (container) {
                    htmx.trigger(container, 'load');
                }
            }
        }
    });
}