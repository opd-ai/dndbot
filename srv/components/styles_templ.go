// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func messageStyles() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<style>\n        .message {\n            margin-bottom: 1rem;\n            padding: 1rem;\n            border-radius: 0.5rem;\n            background-color: #f8f9fa;\n        }\n\n        .message.thinking {\n            background-color: #e9ecef;\n        }\n\n        .message.error {\n            background-color: #ffe6e6;\n        }\n\n        .message.success {\n            background-color: #e6ffe6;\n        }\n\n        .message-header {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 0.5rem;\n            font-size: 0.875rem;\n            color: #6c757d;\n        }\n\n        .message-content {\n            margin-bottom: 0.5rem;\n            line-height: 1.5;\n        }\n\n        .message-output {\n            font-family: monospace;\n            white-space: pre-wrap;\n            background-color: #f8f9fa;\n            padding: 0.5rem;\n            border-radius: 0.25rem;\n            font-size: 0.875rem;\n        }\n\n        .loading {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            height: 100px;\n            font-style: italic;\n        }\n\n        #message-container::-webkit-scrollbar {\n            width: 8px;\n        }\n\n        #message-container::-webkit-scrollbar-track {\n            background: #f1f1f1;\n            border-radius: 4px;\n        }\n\n        #message-container::-webkit-scrollbar-thumb {\n            background: #888;\n            border-radius: 4px;\n        }\n\n        #message-container::-webkit-scrollbar-thumb:hover {\n            background: #555;\n        }\n    </style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func messageIntro() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div><h1 id=\"welcome-to-dndbot\">Welcome to DNDBot üé≤‚ú®</h1><p>Transform your ideas into fully-fledged D&amp;D adventures with the power of AI! DNDBot is your creative companion for generating rich, detailed tabletop RPG content that‚Äôs ready to play.</p><p>üíé <strong>Generation Cost: 0.0001 BTC</strong> - Pay-per-generation model - No subscription required - Lightning Network enabled - Instant delivery upon payment</p><h2 id=\"what-can-dndbot-create\">What Can DNDBot Create?</h2><p>üìñ <strong>Complete Adventures</strong> - Detailed narratives and storylines - Engaging NPCs and villains - Balanced encounters and challenges - Custom dungeons and locations - Treasure and reward tables</p><p>üé® <strong>Rich Details</strong> - Setting descriptions - Character backgrounds - Monster stat blocks - Illustration prompts - Maps and layouts</p><h2 id=\"how-it-works\">How It Works</h2><ol type=\"1\"><li><p><strong>Describe Your Vision</strong> Share your adventure idea in plain English. Whether it‚Äôs a desert tomb raid or an urban heist, DNDBot understands your creative direction.</p></li><li><p><strong>Complete Payment</strong> Send 0.0001 BTC to start the generation process. Payment is verified instantly upon reciept.</p></li><li><p><strong>Watch It Generate</strong> See your adventure take shape in real-time as our AI crafts each component, from the opening hook to the final encounter.</p></li><li><p><strong>Download &amp; Play</strong> Get a complete, organized adventure package ready for your next gaming session. All content is copyright-safe and ready to use!</p></li></ol><h2 id=\"get-started-now\">Get Started Now</h2><p>Just enter your adventure concept below and let DNDBot handle the rest. Need inspiration? Try one of these prompts:</p><ul><li>‚ÄúA mysterious plague is turning villagers to stone‚Äù</li><li>‚ÄúAncient dragons awaken beneath a frozen city‚Äù</li><li>‚ÄúA carnival of illusions holds dark secrets‚Äù</li></ul><p><em>Your next epic adventure awaits‚Ä¶ for just 0.0001 BTC!</em> ‚ö°Ô∏è</p><p><strong>Note</strong>: All generations are stored for 24 hours and can be re-downloaded within that period at no additional cost.</p></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
