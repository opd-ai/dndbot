// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
// srv/components/layout.templ

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Layout() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html><head><title>D&D Adventure Generator</title><script src=\"https://unpkg.com/htmx.org@1.9.10\"></script><script src=\"https://unpkg.com/htmx.org/dist/ext/ws.js\"></script><script src=\"https://unpkg.com/htmx.org/dist/ext/json-enc.js\"></script><link rel=\"stylesheet\" href=\"/static/styles.css\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></head><body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script>\n                // Global message handler\n                htmx.logAll(); // Enable HTMX debugging\n                \n                // Session management\n                const sessionManager = {\n                    getSessionId: () => localStorage.getItem('sessionId'),\n                    setSessionId: (id) => localStorage.setItem('sessionId', id),\n                    clearSession: () => localStorage.removeItem('sessionId')\n                };\n\n                // Handle page visibility and session restoration\n                document.addEventListener('visibilitychange', function() {\n                    if (!document.hidden) {\n                        const sessionId = sessionManager.getSessionId();\n                        if (sessionId) {\n                            const statusDiv = document.getElementById('generation-status');\n                            if (statusDiv) {\n                                htmx.ajax('GET', '/check-session', {\n                                    target: '#generation-status',\n                                    swap: 'innerHTML'\n                                });\n                            }\n                        }\n                    }\n                });\n\n                // Initial session check on page load\n                document.addEventListener('DOMContentLoaded', function() {\n                    const sessionId = sessionManager.getSessionId();\n                    if (sessionId) {\n                        const statusDiv = document.getElementById('generation-status');\n                        if (statusDiv) {\n                            htmx.ajax('GET', '/check-session', {\n                                target: '#generation-status',\n                                swap: 'innerHTML'\n                            });\n                        }\n                    }\n                });\n            </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
